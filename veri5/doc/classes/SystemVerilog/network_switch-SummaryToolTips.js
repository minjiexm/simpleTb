NDSummary.OnToolTipsLoaded("SystemVerilogClass:network_switch",{96:"<div class=\"NDToolTip TClass LSystemVerilog\"><div class=\"NDClassPrototype\" id=\"NDClassPrototype96\"><div class=\"CPEntry TClass Current\"><div class=\"CPModifiers\"><span class=\"SHKeyword\">typedef</span></div><div class=\"CPName\">network_switch</div></div></div><div class=\"TTSummary\">The network_switch class is a logic network swich class.&nbsp; It has no real packet switch function.&nbsp; network_switch has on upstream port and many downstream ports.&nbsp; the upstream port can connect to other network_switch downstream port or connect to network_port. network_switch can let network_host/network_swith and network_port connect to its downstream ports.&nbsp; network_switch class will forward all packets from downstream ports to its upstream port.&nbsp; Also the packets from upstream ports will send to downstream ports.&nbsp; You can add some packet encap &amp; decap functions into network_switch.</div></div>",97:"<div class=\"NDToolTip TFunction LSystemVerilog\"><div id=\"NDPrototype97\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">function new</span> (</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\"><span class=\"SHKeyword\">string</span>&nbsp;</td><td class=\"PName last\">name,</td></tr><tr><td class=\"PType first\">uvm_component&nbsp;</td><td class=\"PName last\">parent</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Initializes the object.</div></div>",6:"<div class=\"NDToolTip TFunction LSystemVerilog\"><div id=\"NDPrototype6\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">virtual function void</span> build_phase (</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\">uvm_phase&nbsp;</td><td class=\"PName last\">phase</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Standard uvm build_phase function build all inputs and outputs</div></div>",98:"<div class=\"NDToolTip TFunction LSystemVerilog\"><div id=\"NDPrototype98\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">virtual</span> task ds_input_process(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"first\"></td><td class=\"PType\">uvm_sequence_item&nbsp;</td><td class=\"PName last\">txn,</td></tr><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">int</span>&nbsp;</td><td class=\"PType\"><span class=\"SHKeyword\">unsigned</span>&nbsp;</td><td class=\"PName last\">port_idx</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Implment function which receive packets from downstream_port</div></div>",99:"<div class=\"NDToolTip TFunction LSystemVerilog\"><div class=\"TTSummary\">Implment function which receive packets from upstream_port</div></div>",100:"<div class=\"NDToolTip TFunction LSystemVerilog\"><div id=\"NDPrototype100\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">virtual function void</span> connect_upstream(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"first\"></td><td class=\"PType\">network_component&nbsp;</td><td class=\"PName\">neighbour,</td><td></td><td class=\"last\"></td></tr><tr><td class=\"PModifierQualifier first\">input <span class=\"SHKeyword\">int</span>&nbsp;</td><td class=\"PType\"><span class=\"SHKeyword\">unsigned</span>&nbsp;</td><td class=\"PName\">port_idx&nbsp;</td><td class=\"PDefaultValueSeparator\">=&nbsp;</td><td class=\"PDefaultValue last\"><span class=\"SHNumber\">0</span></td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Connect to a neighbour, the neighbour will be the upstearm neighbour switch can connect to a port or a switch type component</div></div>",101:"<div class=\"NDToolTip TFunction LSystemVerilog\"><div id=\"NDPrototype101\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">virtual function</span> uvme_layer_input#(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PName first last\">amiq_eth_packet</td></tr></table></td><td class=\"PAfterParameters\">) get_ds_input(<span class=\"SHKeyword\">int unsigned</span> port_idx = <span class=\"SHNumber\">0</span>)</td></tr></table></div><div class=\"TTSummary\">Return the downstream uvme_layer_input of giving index</div></div>",102:"<div class=\"NDToolTip TFunction LSystemVerilog\"><div id=\"NDPrototype102\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">virtual function</span> uvme_layer_output#(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PName first last\">amiq_eth_packet</td></tr></table></td><td class=\"PAfterParameters\">) get_ds_output(<span class=\"SHKeyword\">int unsigned</span> port_idx = <span class=\"SHNumber\">0</span>)</td></tr></table></div><div class=\"TTSummary\">Return the downstream uvme_layer_output of giving index</div></div>",204:"<div class=\"NDToolTip TFunction LSystemVerilog\"><div id=\"NDPrototype204\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">virtual function void</span> get_all_ds_neighours(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">ref</span>&nbsp;</td><td class=\"PType\">network_component&nbsp;</td><td class=\"PName last\">ds_neighbour[$]</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Get all downstream neighbours through internal network_outputs network_switch should implement this function</div></div>",253:"<div class=\"NDToolTip TFunction LSystemVerilog\"><div id=\"NDPrototype253\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">virtual function</span> bit can_receive(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\">amiq_eth_packet&nbsp;</td><td class=\"PName last\">txn</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Does the packet can be received?&nbsp; If one of the ds neighbour can received the packet, means switch should receive it.</div></div>"});