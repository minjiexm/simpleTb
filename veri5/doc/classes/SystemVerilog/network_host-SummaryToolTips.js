NDSummary.OnToolTipsLoaded("SystemVerilogClass:network_host",{90:"<div class=\"NDToolTip TClass LSystemVerilog\"><div class=\"NDClassPrototype\" id=\"NDClassPrototype90\"><div class=\"CPEntry TClass Current\"><div class=\"CPModifiers\"><span class=\"SHKeyword\">typedef</span></div><div class=\"CPName\">network_host</div></div></div><div class=\"TTSummary\">The network_host class is a traffic generator.&nbsp; You can think network_host as a PC, it can send out IP packets to network.</div></div>",82:"<div class=\"NDToolTip TFunction LSystemVerilog\"><div id=\"NDPrototype82\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">function new</span> (</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\"><span class=\"SHKeyword\">string</span>&nbsp;</td><td class=\"PName last\">name,</td></tr><tr><td class=\"PType first\">uvm_component&nbsp;</td><td class=\"PName last\">parent</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Initializes the object.</div></div>",13:"<div class=\"NDToolTip TFunction LSystemVerilog\"><div id=\"NDPrototype13\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">virtual function void</span> build_phase (</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\">uvm_phase&nbsp;</td><td class=\"PName last\">phase</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Standard uvm build_phase function build all inputs and outputs</div></div>",95:"<div class=\"NDToolTip TFunction LSystemVerilog\"><div id=\"NDPrototype95\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">virtual function void</span> connect_upstream(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"first\"></td><td class=\"PType\">network_component&nbsp;</td><td class=\"PName\">neighbour,</td><td></td><td class=\"last\"></td></tr><tr><td class=\"PModifierQualifier first\">input <span class=\"SHKeyword\">int</span>&nbsp;</td><td class=\"PType\"><span class=\"SHKeyword\">unsigned</span>&nbsp;</td><td class=\"PName\">port_idx&nbsp;</td><td class=\"PDefaultValueSeparator\">=&nbsp;</td><td class=\"PDefaultValue last\"><span class=\"SHNumber\">0</span></td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Connect to a neighbour, the neighbour will be the upstearm neighbour host can connect to a port or a switch type component</div></div>",257:"<div class=\"NDToolTip TFunction LSystemVerilog\"><div id=\"NDPrototype257\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">virtual function</span> bit can_receive(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\">amiq_eth_packet&nbsp;</td><td class=\"PName last\">txn</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Does the packet can be received?</div></div>",258:"<div class=\"NDToolTip TFunction LSystemVerilog\"><div id=\"NDPrototype258\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">virtual function void</span> receive_process(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\">amiq_eth_packet&nbsp;</td><td class=\"PName last\">txn</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">knob function for processing input from network side</div></div>",15:"<div class=\"NDToolTip TFunction LSystemVerilog\"><div id=\"NDPrototype15\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">virtual</span> task send_l2_packet(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\">network_address&nbsp;</td><td class=\"PName last\">dest_addr</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">send out a L2 Packet from host to network</div></div>",205:"<div class=\"NDToolTip TFunction LSystemVerilog\"><div id=\"NDPrototype205\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">virtual function void</span> get_all_ds_neighours(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">ref</span>&nbsp;</td><td class=\"PType\">network_component&nbsp;</td><td class=\"PName last\">ds_neighbour[$]</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Get all downstream neighbours through internal network_outputs network_switch should implement this function</div></div>",259:"<div class=\"NDToolTip TFunction LSystemVerilog\"><div id=\"NDPrototype259\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">virtual function void</span> report_phase (</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\">uvm_phase&nbsp;</td><td class=\"PName last\">phase</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Standard uvm report_phase function Print Counters\' value</div></div>"});